{
	"info": {
		"_postman_id": "89f97065-11fa-4287-a340-17963edd1f9e",
		"name": "Santa change password",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "18748566-89f97065-11fa-4287-a340-17963edd1f9e"
	},
	"item": [
		{
			"name": "Test as a user I can successfully login to the system",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c37b495a-6cd3-4b18-83cb-833c7f4416d4",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b6341b70-e9f7-4229-96ff-ffc13d18271b",
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Check user name and email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.username).to.eql(\"tester\");\r",
							"    pm.expect(jsonData.email).to.eql(\"test-email2023new@mail.ru\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "1797f12b-b423-4eec-a473-0d71c8d2a353",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\":\"{{userPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}login",
					"host": [
						"{{Base URL}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as a user I can change my password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9c19d10e-0a1d-4ab8-8617-f5a08c7a95f7",
						"exec": [
							"const oldUserPassword=pm.variables.replaceIn(\"{{userPassword}}\");\r",
							"pm.environment.set(\"oldUserPassword\",oldUserPassword)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2d5aabf7-c366-470c-9c76-b163c984f9aa",
						"exec": [
							"\r",
							"const request1 = JSON.parse(request.data);\r",
							"\r",
							"\r",
							"if (request1.password.length>=6 && request1.password.length<=20 ){\r",
							"    pm.environment.set(\"userPassword\",request1.password)\r",
							"   \r",
							"};\r",
							"\r",
							"if (request1.password.length>=6 && request1.password.length<=20){  \r",
							"\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"\r",
							"    });\r",
							"\r",
							"    pm.test(\"Check user's data\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.email).to.eql(\"test-email2023new@mail.ru\");\r",
							"        pm.expect(jsonData.isVerified).to.eql(true) });\r",
							"\r",
							"} else {\r",
							"    \r",
							"    pm.test(\"Status code is 400\", function () {\r",
							"        pm.response.to.have.status(400);\r",
							"    });\r",
							"\r",
							"     pm.test(\"Check error message\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).to.eql(\"validations.invalid\");\r",
							"    });\r",
							"\r",
							"    \r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "2428bf4c-935c-47ff-9fa5-4c9c5aa2d81d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"{{newUserPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}account/password",
					"host": [
						"{{Base URL}}account"
					],
					"path": [
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as a user I can successfully logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dce52bff-7e21-46b3-9d99-36a601d224e5",
						"exec": [
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "055bb9c6-6da6-4157-872b-04a4cddf9f2d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}logout",
					"host": [
						"{{Base URL}}logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as a user I can not login to the system with old password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ad4d8325-9941-4b1b-9d07-91a7d6824096",
						"exec": [
							"const passwordCurr = pm.environment.get(\"userPassword\");\r",
							"const passwordOld=pm.environment.get(\"oldUserPassword\");\r",
							"\r",
							"console.log(passwordCurr);\r",
							"console.log(passwordOld);\r",
							"\r",
							"if (passwordCurr==passwordOld){\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"} else {\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"}),\r",
							"pm.test(\"Check error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"INVALID_USERNAME_OR_PASSWORD\");\r",
							"})\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "04958bfa-bf0b-4d0e-98f0-a5f966c269b0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\":\"{{oldUserPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}login?redirect=%2F",
					"host": [
						"{{Base URL}}login"
					],
					"query": [
						{
							"key": "redirect",
							"value": "%2F"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as a user I can login to the system with new password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4ec66e76-b969-4d2c-b125-c86ee44259d5",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5526bc3d-a3b3-44eb-8f00-1b629e3710a7",
						"exec": [
							"const request3 = JSON.parse(request.data);\r",
							"\r",
							"if (request3.password.length>=6 && request3.password.length<=20){  \r",
							"\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"\r",
							"} else {\r",
							"    \r",
							"    pm.test(\"Status code is 400\", function () {\r",
							"        pm.response.to.have.status(400);\r",
							"    });\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "6a274217-631c-4573-8b38-46be4a49dd63",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\":\"{{userPassword}}\"\r\n}  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}login?redirect=%2F",
					"host": [
						"{{Base URL}}login"
					],
					"query": [
						{
							"key": "redirect",
							"value": "%2F"
						}
					]
				}
			},
			"response": []
		}
	]
}
{
	"info": {
		"_postman_id": "7294881a-b835-426e-8d03-4a2f1078186b",
		"name": "Santa box",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "18748566-7294881a-b835-426e-8d03-4a2f1078186b"
	},
	"item": [
		{
			"name": "Test as a user I can not login to the system with invalid password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b93292b4-65bb-4a67-9ec1-4c0b0fbb680c",
						"exec": [
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Check error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"INVALID_USERNAME_OR_PASSWORD\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "5bfcd8a2-f5b5-437f-9ebf-239a5fedd5f0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{userEmail}}\", \r\n    \"password\": \"{{$randomPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}login",
					"host": [
						"{{Base URL}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as a user I can not login to the system with invalid email",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b93292b4-65bb-4a67-9ec1-4c0b0fbb680c",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Check error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"INVALID_USERNAME_OR_PASSWORD\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d10a96e5-ebef-4453-b246-e4b00c2f1dde",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "3b0f07e4-8a32-48ba-864f-daf67c4890f7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"test-email2023@mail.ru\", \r\n    \"password\": \"{{userPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}login",
					"host": [
						"{{Base URL}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as a user I can successfully login to the system",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c37b495a-6cd3-4b18-83cb-833c7f4416d4",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b6341b70-e9f7-4229-96ff-ffc13d18271b",
						"exec": [
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Check user name and email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.username).to.eql(\"tester\");\r",
							"    pm.expect(jsonData.email).to.eql(\"test-email2023new@mail.ru\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "cdd0b106-1b92-419b-a33d-3214b7b086c7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\":\"{{userPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}login",
					"host": [
						"{{Base URL}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as an authorized user I can create a box",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c107831a-5deb-46e9-80a3-abd1ac990e34",
						"exec": [
							"const boxName=pm.variables.replaceIn(\"{{$randomWord}}\");\r",
							"pm.environment.set(\"boxName\",boxName)\r",
							"\r",
							"const boxKey=pm.variables.replaceIn(\"{{$randomPassword}}\");\r",
							"pm.environment.set(\"boxKey\",boxKey)\r",
							"\r",
							"const picture=[\r",
							"    \"tree\",\r",
							"    \"gift\",\r",
							"    \"cup_one\",\r",
							"    \"cup_two\",\r",
							"    \"cake\",\r",
							"    \"cup_cake\",\r",
							"    \"cookie_tree\",\r",
							"    \"cookie_star\",\r",
							"    \"lollipop\",\r",
							"    \"mittens\",\r",
							"    \"tree_toys\",\r",
							"    \"santa\",\r",
							"    \"house_one\"\r",
							"]\r",
							"const randomNumber=Math.floor(Math.random()*picture.length);\r",
							"pm.environment.set(\"picture\",picture[randomNumber]);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6d85cdc2-0401-461c-b8cd-86039f71594d",
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"const boxname=pm.environment.get(\"boxName\");\r",
							"\r",
							"pm.test(\"Check name of the box\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.box.name).to.eql(boxname);\r",
							"});\r",
							"\r",
							"const boxkey=pm.environment.get(\"boxKey\");\r",
							"\r",
							"pm.test(\"Check key of the box\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.box.key).to.eql(boxkey);\r",
							"});\r",
							"\r",
							"const pictures=pm.environment.get(\"picture\");\r",
							"\r",
							"pm.test(\"Check picture of the box\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.box.picture).to.eql(pictures);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "470512b4-a37a-4363-94a6-534381a180db",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"email\":null,\r\n\"name\":\"{{boxName}}\",\r\n\"key\":\"{{boxKey}}\",\r\n\"picture\":\"{{picture}}\",\r\n\"usePost\":\"{{$randomBoolean}}\",\r\n\"useCashLimit\":null,  \r\n\"cashLimit\":null,\r\n\"cashLimitCurrency\":null,\r\n\"useWish\":\"{{$randomBoolean}}\",\r\n\"useCircleDraw\":null,\r\n\"isInviteAfterDraw\":null,\r\n\"isArchived\":null,\r\n\"createAdminCard\":null,\r\n\"isCreated\":true,\r\n\"useNames\":\"{{$randomBoolean}}\",\r\n\"isPhoneRequired\":\"{{$randomBoolean}}\",\r\n\"logo\":null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}box",
					"host": [
						"{{Base URL}}box"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test check the user box",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "604ac5ba-dd22-4eb5-ac24-31addf4fcaaf",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check admin\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].admin.email).to.eql(\"test-email2023new@mail.ru\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "aae49ffb-e9d1-4c1a-b0a4-293710a313a9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}account/boxes",
					"host": [
						"{{Base URL}}account"
					],
					"path": [
						"boxes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as an authorized user I can not create a box with key that already exist",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5d588fe0-a140-4876-889a-fbeec7245a05",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6893fbe5-b441-47ca-b45b-6e31d14df32d",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Check error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"BOX_KEY_ALREADY_EXIST\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "79a9437a-c73e-4e25-afea-28a69f44a133",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"email\":null,\r\n\"name\":\"{{$randomWord}}\",\r\n\"key\":\"santa\",\r\n\"picture\":\"{{picture}}\",\r\n\"usePost\":\"{{$randomBoolean}}\",\r\n\"useCashLimit\":null,\r\n\"cashLimit\":null,\r\n\"cashLimitCurrency\":null,\r\n\"useWish\":\"{{$randomBoolean}}\",\r\n\"useCircleDraw\":null,\r\n\"isInviteAfterDraw\":null,\r\n\"isArchived\":null,\r\n\"createAdminCard\":null,\r\n\"isCreated\":true,\r\n\"useNames\":\"{{$randomBoolean}}\",\r\n\"isPhoneRequired\":\"{{$randomBoolean}}\",\r\n\"logo\":null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}box",
					"host": [
						"{{Base URL}}box"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as a user I can change the name of the box",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "82a005ee-5906-4d7a-a6d7-fba58456b1c7",
						"exec": [
							"const newBoxName=pm.variables.replaceIn(\"{{$randomWord}}\");\r",
							"pm.environment.set(\"newBoxName\",newBoxName)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "14f0f0a2-e48d-4f48-b158-be863d184f9c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const newname = pm.environment.get(\"newBoxName\");\r",
							"\r",
							"pm.test(\"Check new name of the box\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.box.name).to.eql(newname);\r",
							"});\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "628c8543-9be0-455e-9296-ff1645ea2a22",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"email\":null,\r\n\"name\":\"{{newBoxName}}\",\r\n\"key\":\"{{boxKey}}\",\r\n\"picture\":\"{{picture}}\",\r\n\"usePost\":\"{{$randomBoolean}}\",\r\n\"useCashLimit\":null,  \r\n\"cashLimit\":null,\r\n\"cashLimitCurrency\":null,\r\n\"useWish\":\"{{$randomBoolean}}\",\r\n\"useCircleDraw\":null,\r\n\"isInviteAfterDraw\":null,\r\n\"isArchived\":null,\r\n\"createAdminCard\":null,\r\n\"isCreated\":true,\r\n\"useNames\":\"{{$randomBoolean}}\",\r\n\"isPhoneRequired\":\"{{$randomBoolean}}\",\r\n\"logo\":null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}box",
					"host": [
						"{{Base URL}}box"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as a user I can change the picture of the box wrapper",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b1ffca06-d81a-4d66-8511-8f8ddac8b301",
						"exec": [
							"const picture=[\r",
							"    \"tree\",\r",
							"    \"gift\",\r",
							"    \"cup_one\",\r",
							"    \"cup_two\",\r",
							"    \"cake\",\r",
							"    \"cup_cake\",\r",
							"    \"cookie_tree\",\r",
							"    \"cookie_star\",\r",
							"    \"lollipop\",\r",
							"    \"mittens\",\r",
							"    \"tree_toys\",\r",
							"    \"santa\",\r",
							"    \"house_one\"\r",
							"]\r",
							"const randomNumber=Math.floor(Math.random()*picture.length);\r",
							"pm.environment.set(\"newPicture\",picture[randomNumber]);\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1224e165-ed5e-4dc9-975a-02d979ab57c7",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const newpicture = pm.environment.get(\"newPicture\");\r",
							"\r",
							"pm.test(\"Check new picture of the box\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.box.picture).to.eql(newpicture);\r",
							"});\r",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "dcd6b27d-15b8-495e-a941-fc4eb0ef9b0b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"email\":null,\r\n\"name\":\"{{newBoxName}}\",\r\n\"key\":\"{{boxKey}}\",\r\n\"picture\":\"{{newPicture}}\",\r\n\"usePost\":\"{{$randomBoolean}}\",\r\n\"useCashLimit\":null,  \r\n\"cashLimit\":null,\r\n\"cashLimitCurrency\":null,\r\n\"useWish\":\"{{$randomBoolean}}\",\r\n\"useCircleDraw\":null,\r\n\"isInviteAfterDraw\":null,\r\n\"isArchived\":null,\r\n\"createAdminCard\":null,\r\n\"isCreated\":true,\r\n\"useNames\":\"{{$randomBoolean}}\",\r\n\"isPhoneRequired\":\"{{$randomBoolean}}\",\r\n\"logo\":null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}box",
					"host": [
						"{{Base URL}}box"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as a user I can limit the price of presents",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e1a87f2e-d30c-4500-a3e3-5f2abac30485",
						"exec": [
							"const currency=[\r",
							"    \"rub\",\r",
							"    \"eur\",\r",
							"    \"uah\",\r",
							"    \"byn\",\r",
							"    \"kzt\",\r",
							"    \"usd\"\r",
							"]\r",
							"const randomNumber=Math.floor(Math.random()*currency.length);\r",
							"pm.environment.set(\"currency\",currency[randomNumber]);\r",
							"\r",
							"pm.environment.set(\"cashLimit\",Math.trunc(Math.random()*100000)+1);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "de9c9d88-8827-4e95-ab0a-5bb049d5ab66",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const cashlimit = pm.environment.get(\"cashLimit\");\r",
							"\r",
							"pm.test(\"Check cash limit\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.box.cashLimit).to.eql(cashlimit);\r",
							"});\r",
							"\r",
							"const cashCurrency = pm.environment.get(\"currency\");\r",
							"\r",
							"pm.test(\"Check cash currency\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.box.cashLimitCurrency).to.eql(cashCurrency);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9ef0fdae-6d9d-4308-a337-bf3c635a2c55",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"email\":null,\r\n\"name\":\"{{newBoxName}}\",\r\n\"key\":\"{{boxKey}}\",\r\n\"picture\":\"{{newPicture}}\",\r\n\"usePost\":\"{{$randomBoolean}}\",\r\n\"useCashLimit\":true,  \r\n\"cashLimit\":{{cashLimit}},\r\n\"cashLimitCurrency\":\"{{currency}}\",\r\n\"useWish\":\"{{$randomBoolean}}\",\r\n\"useCircleDraw\":null,\r\n\"isInviteAfterDraw\":null,\r\n\"isArchived\":null,\r\n\"createAdminCard\":null,\r\n\"isCreated\":true,\r\n\"useNames\":\"{{$randomBoolean}}\",\r\n\"isPhoneRequired\":\"{{$randomBoolean}}\",\r\n\"logo\":null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}box",
					"host": [
						"{{Base URL}}box"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test as a user I can delete the box",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed4d0332-d4e1-421f-beaf-393e1cde56d0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "8c173ce8-2b50-4c9e-b79e-ecb6fdf2a23d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}box/{{boxKey}}",
					"host": [
						"{{Base URL}}box"
					],
					"path": [
						"{{boxKey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test check the user boxes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e6888830-26e0-4bdb-a44f-546302ceefc0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"[]\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "b4bf3985-e1a2-4b06-9c44-de00c1c37ff4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base URL}}account/boxes",
					"host": [
						"{{Base URL}}account"
					],
					"path": [
						"boxes"
					]
				}
			},
			"response": []
		}
	]
}